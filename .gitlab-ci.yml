variables:
  PKG_NAME: 'schemas'
  PKG_VERSION: '1.0.0'
  DOCKER_HOST: tcp://docker:2375
  RELEASE_REGISTRY: docker.io
  RELEASE_IMAGE: index.docker.io/$RELEASE_USER
  IMAGE_NAME: schemas
  DOCKER_BUILDKIT: 1

stages:
  - build
  - package

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
docker:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker --version
    - echo "$RELEASE_PASSWORD" | docker login $RELEASE_REGISTRY --username $RELEASE_USER --password-stdin
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - echo "Build and push $RELEASE_IMAGE/$IMAGE_NAME$tag"
    - docker build --tag "$RELEASE_IMAGE/$IMAGE_NAME${tag}" .
    - docker push "$RELEASE_IMAGE/$IMAGE_NAME${tag}"
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      changes:
        - Dockerfile
        - validator.py
        - "*.schema.json"

# https://docs.gitlab.com/ee/user/packages/generic_packages/
# https://gitlab.com/guided-explorations/cfg-data/write-ci-cd-variables-in-pipeline
package:
  image: bash:latest
  stage: package
  before_script:
    - apk add curl
  script:
    - |
      echo "${PKG_VERSION}" > version.txt
      echo "${PKG_VERSION}" > version-${PKG_VERSION}.txt
      echo "VERSION=${PKG_VERSION}" > version.env
      tar -czf ${PKG_NAME}-${PKG_VERSION}.tar.gz *.schema.json
      curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ${PKG_NAME}-${PKG_VERSION}.tar.gz ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${PKG_NAME}/${PKG_VERSION}/${PKG_NAME}.${PKG_VERSION}.tar.gz
  artifacts:
    reports:
      # Propagates variables into the pipeline level, but never stores the actual file
      dotenv: version.env
  rules:
    - if: $CI_COMMIT_BRANCH
      changes:
        - "*.schema.json"
  when: manual
